<%- include('../partials/docs-head') %>
<body class="p-2 bg-secondary text-primary">

  <div class="container-lg d-flex flex-column">
  <%- include('../partials/docs-header') %>
    <div class="bg-dark text-white pb -3 m-0 px-2" style="width: 100%;display: flex; flex-direction: row;">
      
      <div role="main" title="main" style="width: 50%;">
        <h1 text-center"">About AC-Generator</h1>
        <p>The audio catalog generator is a solution to address a need for audio podcasters to quickly edit,create, and add podcasts to a catalog.  There are many podcast and log approaches out there.  Mostly they require apodcaster to know some html &/or tother limitations they have to accept.    Clients have to know how to search and review these list of blogs.  What has expired or no longer relevant? A catalog you group them up.
        </p><p>Also many of the podcast software are written using REACT, which gives fancy interface and pretty elements.  These podcasts are not as easily indexed by google search engine and thus lower seo (search) results. If you want to be found you must have a static or similar page.. Also the more various types of outgoing links and incoming links increase visibility. Every catalog has a share button with a custom link to directly go to the media file.  So pass out the links and watch your SEO rating go up.
        </p><p>Every media file allows you to type a medium type description.  This also increases SEO ratings. The fact your media and descriptions are grouped on a single page, means you will mention related subject matter for what users are searching for. This increases SEO ratings.</p>
        <h3>Ease of Use</h3>
        <p>Podcaster only needs to know how to edit text files and follow step by step instructions. Only a couple of technical issues, and with a little help or persistance they can overcome this one time learning curve.</p>
        <p><em>FREE</em> most importantly users had to have a free option and an ability to put it anywhere. A free hoting hosting available on Github. Ability to Take it anywhere, dropbox, local hard drive, a website sub folder. Anywhere a browser can browse html files, this can go.</p>
        <p><em>Accessibility & intuitive Use</em> is extremely important to me.  I want visually impaired with no training or instructions to be able to start accessing the catalog player right away. Take advantage of the keyboard support.  Also serve as an example to other developers out there at how to develop an accessible app for blind users.  Many of the features blind people will find exciting and easy to use.</p>
<h2>Possible Future enhancements</h2>
<p><b>Detailed article page.</b>  A page full of detailed articles. Would be automatically generated along with the player and a link to the detailed article would be automatically generated along with it.  Say later you just want to update the article and/or media description and/or media file. No problem make the change and remerge them back in. </p>
<p>Many non technical people find this a major hassle, so this enhancement will make it super easy.  Spelling correct in under 5 minutes with out any mistakes in html.</p>
<p><b>CLI Version</b> (command line). this app screams CLI and would simplifiy the proccess. Users would have an easier time understanding the rpoccess. At the command line they would perform a few steps and then they will have he smae product, instead of a an app navigation system.
</p>
<h4>Audio Catalog Resources</h4>        
Download the Audio Catalog <a href="<%= repo %>">Repository</a>.<br>
<a href="<%= zip %>">Download Zip Repository  file.</a>
        </div>

        <%- include('../partials/docs-profile') %>
</div>
</DIV>

<%- include('../partials/docs-footer') %>

</body>
</div>



</div>
</body>
<%- include('../partials/docs-footer') %>